{"version":3,"sources":["components/Course.js","data/courses.js","index.js"],"names":["Part","props","Table","Row","Cell","part","name","textAlign","exercises","Content","parts","course","basic","fixed","unstackable","Header","HeaderCell","width","Body","map","key","id","Total","total","reduce","as","Course","attached","Segment","ReactDOM","render","Container","text","style","paddingTop","paddingBottom","Grid","columns","Column","maxWidth","Icon","Divider","courses","document","getElementById"],"mappings":"yPAIMA,EAAO,SAACC,GACZ,OACE,kBAACC,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,KAAP,KAAaH,EAAMI,KAAKC,MACxB,kBAACJ,EAAA,EAAME,KAAP,CAAYG,UAAU,UAAUN,EAAMI,KAAKG,aAK3CC,EAAU,SAACR,GACf,IAAMS,EAAQT,EAAMU,OAAOD,MAI3B,OACE,kBAACR,EAAA,EAAD,CAAOU,MAAM,OAAOC,OAAK,EAACC,aAAW,GACnC,kBAACZ,EAAA,EAAMa,OAAP,KACE,kBAACb,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAMc,WAAP,CAAkBC,MAAO,GAAzB,QACA,kBAACf,EAAA,EAAMc,WAAP,CAAkBC,MAAO,EAAGV,UAAU,UAAtC,eAKJ,kBAACL,EAAA,EAAMgB,KAAP,KAZKR,EAAMS,KAAI,SAACd,GAAD,OAAU,kBAAC,EAAD,CAAMe,IAAKf,EAAKgB,GAAIhB,KAAMA,UAiBnDiB,EAAQ,SAACrB,GACb,IAAMsB,EAAQtB,EAAMU,OAAOD,MAAMc,QAAO,SAACD,EAAOlB,GAC9C,OAAOkB,EAAQlB,EAAKG,YACnB,GACH,OAAO,kBAACO,EAAA,EAAD,CAAQU,GAAG,MAAX,8BAA4CF,IAiBtCG,EAdA,SAAC,GAAgB,IAAdf,EAAa,EAAbA,OAChB,OACE,oCACE,kBAACI,EAAA,EAAD,CAAQY,SAAS,MAAMF,GAAG,MACvBd,EAAOL,MAEV,kBAACsB,EAAA,EAAD,CAASD,UAAQ,GACf,kBAAC,EAAD,CAAShB,OAAQA,IACjB,kBAAC,EAAD,CAAOA,OAAQA,OChDR,GACb,CACEU,GAAI,EACJf,KAAM,qCACNI,MAAO,CACL,CACEJ,KAAM,wBACNE,UAAW,GACXa,GAAI,GAEN,CACEf,KAAM,2BACNE,UAAW,EACXa,GAAI,GAEN,CACEf,KAAM,uBACNE,UAAW,GACXa,GAAI,GAEN,CACEf,KAAM,QACNE,UAAW,GACXa,GAAI,KAIV,CACEA,GAAI,EACJf,KAAM,UACNI,MAAO,CACL,CACEJ,KAAM,UACNE,UAAW,EACXa,GAAI,GAEN,CACEf,KAAM,cACNE,UAAW,EACXa,GAAI,MCVZQ,IAASC,OAAO,mBApBJ,WAIV,OACE,kBAACC,EAAA,EAAD,CAAWC,MAAI,EAACC,MAAO,CAAEC,WAAY,MAAOC,cAAe,QACzD,kBAACC,EAAA,EAAD,CAAM7B,UAAU,OAAO8B,QAAS,GAC9B,kBAACD,EAAA,EAAKE,OAAN,CAAaL,MAAO,CAAEM,SAAU,MAC9B,kBAACxB,EAAA,EAAD,CAAQU,GAAG,MACT,kBAACe,EAAA,EAAD,CAAMlC,KAAK,YACX,kBAACS,EAAA,EAAON,QAAR,sCAEF,kBAACgC,EAAA,EAAD,MAVCC,EAAQvB,KAAI,SAACR,GAAD,OAAY,kBAAC,EAAD,CAAQS,IAAKT,EAAOU,GAAIV,OAAQA,YAkBnD,MAASgC,SAASC,eAAe,W","file":"static/js/main.7d4c2fcf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Header, Segment, Table } from 'semantic-ui-react';\n\nconst Part = (props) => {\n  return (\n    <Table.Row>\n      <Table.Cell>{props.part.name}</Table.Cell>\n      <Table.Cell textAlign=\"center\">{props.part.exercises}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst Content = (props) => {\n  const parts = props.course.parts;\n  const rows = () => {\n    return parts.map((part) => <Part key={part.id} part={part} />);\n  };\n  return (\n    <Table basic=\"very\" fixed unstackable>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell width={9}>Name</Table.HeaderCell>\n          <Table.HeaderCell width={3} textAlign=\"center\">\n            Exercises\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>{rows()}</Table.Body>\n    </Table>\n  );\n};\n\nconst Total = (props) => {\n  const total = props.course.parts.reduce((total, part) => {\n    return total + part.exercises;\n  }, 0);\n  return <Header as=\"h4\">Total number of exercises: {total}</Header>;\n};\n\nconst Course = ({ course }) => {\n  return (\n    <>\n      <Header attached=\"top\" as=\"h3\">\n        {course.name}\n      </Header>\n      <Segment attached>\n        <Content course={course} />\n        <Total course={course} />\n      </Segment>\n    </>\n  );\n};\n\nexport default Course;\n","export default [\n  {\n    id: 1,\n    name: 'Half Stack application development',\n    parts: [\n      {\n        name: 'Fundamentals of React',\n        exercises: 10,\n        id: 1,\n      },\n      {\n        name: 'Using props to pass data',\n        exercises: 7,\n        id: 2,\n      },\n      {\n        name: 'State of a component',\n        exercises: 14,\n        id: 3,\n      },\n      {\n        name: 'Redux',\n        exercises: 11,\n        id: 4,\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: 'Node.js',\n    parts: [\n      {\n        name: 'Routing',\n        exercises: 3,\n        id: 1,\n      },\n      {\n        name: 'Middlewares',\n        exercises: 7,\n        id: 2,\n      },\n    ],\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Divider, Icon, Header, Grid } from 'semantic-ui-react';\n\nimport Course from './components/Course';\nimport courses from './data/courses';\n\nconst App = () => {\n  const rows = () => {\n    return courses.map((course) => <Course key={course.id} course={course} />);\n  };\n  return (\n    <Container text style={{ paddingTop: '1em', paddingBottom: '1em' }}>\n      <Grid textAlign=\"left\" columns={1}>\n        <Grid.Column style={{ maxWidth: 500 }}>\n          <Header as=\"h2\">\n            <Icon name=\"student\" />\n            <Header.Content> Web development curriculum </Header.Content>\n          </Header>\n          <Divider />\n          {rows()}\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}